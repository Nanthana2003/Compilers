Terminals unused in grammar

    OTHER
    FOR
    NEWLINE
    DELIM


Grammar

    0 $accept: entry $end

    1 entry: start SPC

    2 start: statement start
    3      | ε

    4 statement: expression
    5          | declaration
    6          | whilestatement
    7          | ifelsestatement
    8          | functionstatement

    9 functionstatement: datatype identifier RPAREN funcdec LPAREN LBRACE start returnstatement RBRACE

   10 returnstatement: ε
   11                | RETURN identifier

   12 funcdec: ε
   13        | declist

   14 declist: datatype identifier nextdec

   15 nextdec: ε
   16        | COMMA declist

   17 ifelsestatement: ifclause elseifstatement

   18 $@1: ε

   19 ifclause: IF $@1 LPAREN compexp RPAREN LBRACE start RBRACE

   20 elseifstatement: elseclause
   21                | elseifclause elseifstatement

   22 $@2: ε

   23 elseifclause: ELSEIF $@2 LPAREN compexp RPAREN LBRACE start RBRACE

   24 identifier: ID

   25 elseclause: ε

   26 $@3: ε

   27 elseclause: ELSE $@3 LBRACE start RBRACE

   28 $@4: ε

   29 whilestatement: WHILE $@4 LPAREN compexp RPAREN LBRACE start RBRACE

   30 $@5: ε

   31 expression: identifier $@5 EQL exp EOL

   32 declaration: datatype varlist EOL

   33 varlist: single newvar

   34 newvar: ε
   35       | COMMA varlist

   36 $@6: ε

   37 datatype: DATA $@6

   38 $@7: ε

   39 single: identifier $@7 singledec

   40 singledec: ε
   41          | EQL exp

   42 exp: term
   43    | exp ADD term
   44    | exp SUB term

   45 term: factor
   46     | term MUL factor
   47     | term DIV factor

   48 compexp: exp EE exp
   49        | exp NE exp
   50        | exp GT exp
   51        | exp LT exp
   52        | exp GTE exp
   53        | exp LTE exp

   54 $@8: ε

   55 factor: NUM $@8
   56       | identifier


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM <nd_obj> (258) 55
    ADD <nd_obj> (259) 43
    DIV <nd_obj> (260) 47
    MUL <nd_obj> (261) 46
    SUB <nd_obj> (262) 44
    ID <nd_obj> (263) 24
    OTHER <nd_obj> (264)
    EQL <nd_obj> (265) 31 41
    EOL <nd_obj> (266) 31 32
    DATA <nd_obj> (267) 37
    WHILE <nd_obj> (268) 29
    FOR <nd_obj> (269)
    IF <nd_obj> (270) 19
    ELSE <nd_obj> (271) 27
    ELSEIF <nd_obj> (272) 23
    NEWLINE <nd_obj> (273)
    COMMA <nd_obj> (274) 16 35
    DELIM <nd_obj> (275)
    LPAREN <nd_obj> (276) 9 19 23 29
    RPAREN <nd_obj> (277) 9 19 23 29
    LBRACE <nd_obj> (278) 9 19 23 27 29
    RBRACE <nd_obj> (279) 9 19 23 27 29
    GT <nd_obj> (280) 50
    LT <nd_obj> (281) 51
    GTE <nd_obj> (282) 52
    LTE <nd_obj> (283) 53
    EE <nd_obj> (284) 48
    NE <nd_obj> (285) 49
    SPC <nd_obj> (286) 1
    RETURN <nd_obj> (287) 11


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    entry <nd_obj> (34)
        on left: 1
        on right: 0
    start <nd_obj> (35)
        on left: 2 3
        on right: 1 2 9 19 23 27 29
    statement <nd_obj> (36)
        on left: 4 5 6 7 8
        on right: 2
    functionstatement <nd_obj> (37)
        on left: 9
        on right: 8
    returnstatement <nd_obj> (38)
        on left: 10 11
        on right: 9
    funcdec <nd_obj> (39)
        on left: 12 13
        on right: 9
    declist <nd_obj> (40)
        on left: 14
        on right: 13 16
    nextdec <nd_obj> (41)
        on left: 15 16
        on right: 14
    ifelsestatement <nd_obj> (42)
        on left: 17
        on right: 7
    ifclause <nd_obj> (43)
        on left: 19
        on right: 17
    $@1 (44)
        on left: 18
        on right: 19
    elseifstatement <nd_obj> (45)
        on left: 20 21
        on right: 17 21
    elseifclause <nd_obj> (46)
        on left: 23
        on right: 21
    $@2 (47)
        on left: 22
        on right: 23
    identifier <nd_obj> (48)
        on left: 24
        on right: 9 11 14 31 39 56
    elseclause <nd_obj> (49)
        on left: 25 27
        on right: 20
    $@3 (50)
        on left: 26
        on right: 27
    whilestatement <nd_obj> (51)
        on left: 29
        on right: 6
    $@4 (52)
        on left: 28
        on right: 29
    expression <nd_obj> (53)
        on left: 31
        on right: 4
    $@5 (54)
        on left: 30
        on right: 31
    declaration <nd_obj> (55)
        on left: 32
        on right: 5
    varlist <nd_obj> (56)
        on left: 33
        on right: 32 35
    newvar <nd_obj> (57)
        on left: 34 35
        on right: 33
    datatype <nd_obj> (58)
        on left: 37
        on right: 9 14 32
    $@6 (59)
        on left: 36
        on right: 37
    single <nd_obj> (60)
        on left: 39
        on right: 33
    $@7 (61)
        on left: 38
        on right: 39
    singledec <nd_obj> (62)
        on left: 40 41
        on right: 39
    exp <nd_obj> (63)
        on left: 42 43 44
        on right: 31 41 43 44 48 49 50 51 52 53
    term <nd_obj> (64)
        on left: 45 46 47
        on right: 42 43 44 46 47
    compexp <nd_obj> (65)
        on left: 48 49 50 51 52 53
        on right: 19 23 29
    factor <nd_obj> (66)
        on left: 55 56
        on right: 45 46 47
    $@8 (67)
        on left: 54
        on right: 55


State 0

    0 $accept: • entry $end

    ID     shift, and go to state 1
    DATA   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    $default  reduce using rule 3 (start)

    entry              go to state 5
    start              go to state 6
    statement          go to state 7
    functionstatement  go to state 8
    ifelsestatement    go to state 9
    ifclause           go to state 10
    identifier         go to state 11
    whilestatement     go to state 12
    expression         go to state 13
    declaration        go to state 14
    datatype           go to state 15


State 1

   24 identifier: ID •

    $default  reduce using rule 24 (identifier)


State 2

   37 datatype: DATA • $@6

    $default  reduce using rule 36 ($@6)

    $@6  go to state 16


State 3

   29 whilestatement: WHILE • $@4 LPAREN compexp RPAREN LBRACE start RBRACE

    $default  reduce using rule 28 ($@4)

    $@4  go to state 17


State 4

   19 ifclause: IF • $@1 LPAREN compexp RPAREN LBRACE start RBRACE

    $default  reduce using rule 18 ($@1)

    $@1  go to state 18


State 5

    0 $accept: entry • $end

    $end  shift, and go to state 19


State 6

    1 entry: start • SPC

    SPC  shift, and go to state 20


State 7

    2 start: statement • start

    ID     shift, and go to state 1
    DATA   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    $default  reduce using rule 3 (start)

    start              go to state 21
    statement          go to state 7
    functionstatement  go to state 8
    ifelsestatement    go to state 9
    ifclause           go to state 10
    identifier         go to state 11
    whilestatement     go to state 12
    expression         go to state 13
    declaration        go to state 14
    datatype           go to state 15


State 8

    8 statement: functionstatement •

    $default  reduce using rule 8 (statement)


State 9

    7 statement: ifelsestatement •

    $default  reduce using rule 7 (statement)


State 10

   17 ifelsestatement: ifclause • elseifstatement

    ELSE    shift, and go to state 22
    ELSEIF  shift, and go to state 23

    $default  reduce using rule 25 (elseclause)

    elseifstatement  go to state 24
    elseifclause     go to state 25
    elseclause       go to state 26


State 11

   31 expression: identifier • $@5 EQL exp EOL

    $default  reduce using rule 30 ($@5)

    $@5  go to state 27


State 12

    6 statement: whilestatement •

    $default  reduce using rule 6 (statement)


State 13

    4 statement: expression •

    $default  reduce using rule 4 (statement)


State 14

    5 statement: declaration •

    $default  reduce using rule 5 (statement)


State 15

    9 functionstatement: datatype • identifier RPAREN funcdec LPAREN LBRACE start returnstatement RBRACE
   32 declaration: datatype • varlist EOL

    ID  shift, and go to state 1

    identifier  go to state 28
    varlist     go to state 29
    single      go to state 30


State 16

   37 datatype: DATA $@6 •

    $default  reduce using rule 37 (datatype)


State 17

   29 whilestatement: WHILE $@4 • LPAREN compexp RPAREN LBRACE start RBRACE

    LPAREN  shift, and go to state 31


State 18

   19 ifclause: IF $@1 • LPAREN compexp RPAREN LBRACE start RBRACE

    LPAREN  shift, and go to state 32


State 19

    0 $accept: entry $end •

    $default  accept


State 20

    1 entry: start SPC •

    $default  reduce using rule 1 (entry)


State 21

    2 start: statement start •

    $default  reduce using rule 2 (start)


State 22

   27 elseclause: ELSE • $@3 LBRACE start RBRACE

    $default  reduce using rule 26 ($@3)

    $@3  go to state 33


State 23

   23 elseifclause: ELSEIF • $@2 LPAREN compexp RPAREN LBRACE start RBRACE

    $default  reduce using rule 22 ($@2)

    $@2  go to state 34


State 24

   17 ifelsestatement: ifclause elseifstatement •

    $default  reduce using rule 17 (ifelsestatement)


State 25

   21 elseifstatement: elseifclause • elseifstatement

    ELSE    shift, and go to state 22
    ELSEIF  shift, and go to state 23

    $default  reduce using rule 25 (elseclause)

    elseifstatement  go to state 35
    elseifclause     go to state 25
    elseclause       go to state 26


State 26

   20 elseifstatement: elseclause •

    $default  reduce using rule 20 (elseifstatement)


State 27

   31 expression: identifier $@5 • EQL exp EOL

    EQL  shift, and go to state 36


State 28

    9 functionstatement: datatype identifier • RPAREN funcdec LPAREN LBRACE start returnstatement RBRACE
   39 single: identifier • $@7 singledec

    RPAREN  shift, and go to state 37

    $default  reduce using rule 38 ($@7)

    $@7  go to state 38


State 29

   32 declaration: datatype varlist • EOL

    EOL  shift, and go to state 39


State 30

   33 varlist: single • newvar

    COMMA  shift, and go to state 40

    $default  reduce using rule 34 (newvar)

    newvar  go to state 41


State 31

   29 whilestatement: WHILE $@4 LPAREN • compexp RPAREN LBRACE start RBRACE

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 44
    term        go to state 45
    compexp     go to state 46
    factor      go to state 47


State 32

   19 ifclause: IF $@1 LPAREN • compexp RPAREN LBRACE start RBRACE

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 44
    term        go to state 45
    compexp     go to state 48
    factor      go to state 47


State 33

   27 elseclause: ELSE $@3 • LBRACE start RBRACE

    LBRACE  shift, and go to state 49


State 34

   23 elseifclause: ELSEIF $@2 • LPAREN compexp RPAREN LBRACE start RBRACE

    LPAREN  shift, and go to state 50


State 35

   21 elseifstatement: elseifclause elseifstatement •

    $default  reduce using rule 21 (elseifstatement)


State 36

   31 expression: identifier $@5 EQL • exp EOL

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 51
    term        go to state 45
    factor      go to state 47


State 37

    9 functionstatement: datatype identifier RPAREN • funcdec LPAREN LBRACE start returnstatement RBRACE

    DATA  shift, and go to state 2

    $default  reduce using rule 12 (funcdec)

    funcdec   go to state 52
    declist   go to state 53
    datatype  go to state 54


State 38

   39 single: identifier $@7 • singledec

    EQL  shift, and go to state 55

    $default  reduce using rule 40 (singledec)

    singledec  go to state 56


State 39

   32 declaration: datatype varlist EOL •

    $default  reduce using rule 32 (declaration)


State 40

   35 newvar: COMMA • varlist

    ID  shift, and go to state 1

    identifier  go to state 57
    varlist     go to state 58
    single      go to state 30


State 41

   33 varlist: single newvar •

    $default  reduce using rule 33 (varlist)


State 42

   55 factor: NUM • $@8

    $default  reduce using rule 54 ($@8)

    $@8  go to state 59


State 43

   56 factor: identifier •

    $default  reduce using rule 56 (factor)


State 44

   43 exp: exp • ADD term
   44    | exp • SUB term
   48 compexp: exp • EE exp
   49        | exp • NE exp
   50        | exp • GT exp
   51        | exp • LT exp
   52        | exp • GTE exp
   53        | exp • LTE exp

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61
    GT   shift, and go to state 62
    LT   shift, and go to state 63
    GTE  shift, and go to state 64
    LTE  shift, and go to state 65
    EE   shift, and go to state 66
    NE   shift, and go to state 67


State 45

   42 exp: term •
   46 term: term • MUL factor
   47     | term • DIV factor

    DIV  shift, and go to state 68
    MUL  shift, and go to state 69

    $default  reduce using rule 42 (exp)


State 46

   29 whilestatement: WHILE $@4 LPAREN compexp • RPAREN LBRACE start RBRACE

    RPAREN  shift, and go to state 70


State 47

   45 term: factor •

    $default  reduce using rule 45 (term)


State 48

   19 ifclause: IF $@1 LPAREN compexp • RPAREN LBRACE start RBRACE

    RPAREN  shift, and go to state 71


State 49

   27 elseclause: ELSE $@3 LBRACE • start RBRACE

    ID     shift, and go to state 1
    DATA   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    $default  reduce using rule 3 (start)

    start              go to state 72
    statement          go to state 7
    functionstatement  go to state 8
    ifelsestatement    go to state 9
    ifclause           go to state 10
    identifier         go to state 11
    whilestatement     go to state 12
    expression         go to state 13
    declaration        go to state 14
    datatype           go to state 15


State 50

   23 elseifclause: ELSEIF $@2 LPAREN • compexp RPAREN LBRACE start RBRACE

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 44
    term        go to state 45
    compexp     go to state 73
    factor      go to state 47


State 51

   31 expression: identifier $@5 EQL exp • EOL
   43 exp: exp • ADD term
   44    | exp • SUB term

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61
    EOL  shift, and go to state 74


State 52

    9 functionstatement: datatype identifier RPAREN funcdec • LPAREN LBRACE start returnstatement RBRACE

    LPAREN  shift, and go to state 75


State 53

   13 funcdec: declist •

    $default  reduce using rule 13 (funcdec)


State 54

   14 declist: datatype • identifier nextdec

    ID  shift, and go to state 1

    identifier  go to state 76


State 55

   41 singledec: EQL • exp

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 77
    term        go to state 45
    factor      go to state 47


State 56

   39 single: identifier $@7 singledec •

    $default  reduce using rule 39 (single)


State 57

   39 single: identifier • $@7 singledec

    $default  reduce using rule 38 ($@7)

    $@7  go to state 38


State 58

   35 newvar: COMMA varlist •

    $default  reduce using rule 35 (newvar)


State 59

   55 factor: NUM $@8 •

    $default  reduce using rule 55 (factor)


State 60

   43 exp: exp ADD • term

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    term        go to state 78
    factor      go to state 47


State 61

   44 exp: exp SUB • term

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    term        go to state 79
    factor      go to state 47


State 62

   50 compexp: exp GT • exp

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 80
    term        go to state 45
    factor      go to state 47


State 63

   51 compexp: exp LT • exp

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 81
    term        go to state 45
    factor      go to state 47


State 64

   52 compexp: exp GTE • exp

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 82
    term        go to state 45
    factor      go to state 47


State 65

   53 compexp: exp LTE • exp

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 83
    term        go to state 45
    factor      go to state 47


State 66

   48 compexp: exp EE • exp

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 84
    term        go to state 45
    factor      go to state 47


State 67

   49 compexp: exp NE • exp

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    exp         go to state 85
    term        go to state 45
    factor      go to state 47


State 68

   47 term: term DIV • factor

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    factor      go to state 86


State 69

   46 term: term MUL • factor

    NUM  shift, and go to state 42
    ID   shift, and go to state 1

    identifier  go to state 43
    factor      go to state 87


State 70

   29 whilestatement: WHILE $@4 LPAREN compexp RPAREN • LBRACE start RBRACE

    LBRACE  shift, and go to state 88


State 71

   19 ifclause: IF $@1 LPAREN compexp RPAREN • LBRACE start RBRACE

    LBRACE  shift, and go to state 89


State 72

   27 elseclause: ELSE $@3 LBRACE start • RBRACE

    RBRACE  shift, and go to state 90


State 73

   23 elseifclause: ELSEIF $@2 LPAREN compexp • RPAREN LBRACE start RBRACE

    RPAREN  shift, and go to state 91


State 74

   31 expression: identifier $@5 EQL exp EOL •

    $default  reduce using rule 31 (expression)


State 75

    9 functionstatement: datatype identifier RPAREN funcdec LPAREN • LBRACE start returnstatement RBRACE

    LBRACE  shift, and go to state 92


State 76

   14 declist: datatype identifier • nextdec

    COMMA  shift, and go to state 93

    $default  reduce using rule 15 (nextdec)

    nextdec  go to state 94


State 77

   41 singledec: EQL exp •
   43 exp: exp • ADD term
   44    | exp • SUB term

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 41 (singledec)


State 78

   43 exp: exp ADD term •
   46 term: term • MUL factor
   47     | term • DIV factor

    DIV  shift, and go to state 68
    MUL  shift, and go to state 69

    $default  reduce using rule 43 (exp)


State 79

   44 exp: exp SUB term •
   46 term: term • MUL factor
   47     | term • DIV factor

    DIV  shift, and go to state 68
    MUL  shift, and go to state 69

    $default  reduce using rule 44 (exp)


State 80

   43 exp: exp • ADD term
   44    | exp • SUB term
   50 compexp: exp GT exp •

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 50 (compexp)


State 81

   43 exp: exp • ADD term
   44    | exp • SUB term
   51 compexp: exp LT exp •

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 51 (compexp)


State 82

   43 exp: exp • ADD term
   44    | exp • SUB term
   52 compexp: exp GTE exp •

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 52 (compexp)


State 83

   43 exp: exp • ADD term
   44    | exp • SUB term
   53 compexp: exp LTE exp •

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 53 (compexp)


State 84

   43 exp: exp • ADD term
   44    | exp • SUB term
   48 compexp: exp EE exp •

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 48 (compexp)


State 85

   43 exp: exp • ADD term
   44    | exp • SUB term
   49 compexp: exp NE exp •

    ADD  shift, and go to state 60
    SUB  shift, and go to state 61

    $default  reduce using rule 49 (compexp)


State 86

   47 term: term DIV factor •

    $default  reduce using rule 47 (term)


State 87

   46 term: term MUL factor •

    $default  reduce using rule 46 (term)


State 88

   29 whilestatement: WHILE $@4 LPAREN compexp RPAREN LBRACE • start RBRACE

    ID     shift, and go to state 1
    DATA   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    $default  reduce using rule 3 (start)

    start              go to state 95
    statement          go to state 7
    functionstatement  go to state 8
    ifelsestatement    go to state 9
    ifclause           go to state 10
    identifier         go to state 11
    whilestatement     go to state 12
    expression         go to state 13
    declaration        go to state 14
    datatype           go to state 15


State 89

   19 ifclause: IF $@1 LPAREN compexp RPAREN LBRACE • start RBRACE

    ID     shift, and go to state 1
    DATA   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    $default  reduce using rule 3 (start)

    start              go to state 96
    statement          go to state 7
    functionstatement  go to state 8
    ifelsestatement    go to state 9
    ifclause           go to state 10
    identifier         go to state 11
    whilestatement     go to state 12
    expression         go to state 13
    declaration        go to state 14
    datatype           go to state 15


State 90

   27 elseclause: ELSE $@3 LBRACE start RBRACE •

    $default  reduce using rule 27 (elseclause)


State 91

   23 elseifclause: ELSEIF $@2 LPAREN compexp RPAREN • LBRACE start RBRACE

    LBRACE  shift, and go to state 97


State 92

    9 functionstatement: datatype identifier RPAREN funcdec LPAREN LBRACE • start returnstatement RBRACE

    ID     shift, and go to state 1
    DATA   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    $default  reduce using rule 3 (start)

    start              go to state 98
    statement          go to state 7
    functionstatement  go to state 8
    ifelsestatement    go to state 9
    ifclause           go to state 10
    identifier         go to state 11
    whilestatement     go to state 12
    expression         go to state 13
    declaration        go to state 14
    datatype           go to state 15


State 93

   16 nextdec: COMMA • declist

    DATA  shift, and go to state 2

    declist   go to state 99
    datatype  go to state 54


State 94

   14 declist: datatype identifier nextdec •

    $default  reduce using rule 14 (declist)


State 95

   29 whilestatement: WHILE $@4 LPAREN compexp RPAREN LBRACE start • RBRACE

    RBRACE  shift, and go to state 100


State 96

   19 ifclause: IF $@1 LPAREN compexp RPAREN LBRACE start • RBRACE

    RBRACE  shift, and go to state 101


State 97

   23 elseifclause: ELSEIF $@2 LPAREN compexp RPAREN LBRACE • start RBRACE

    ID     shift, and go to state 1
    DATA   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    $default  reduce using rule 3 (start)

    start              go to state 102
    statement          go to state 7
    functionstatement  go to state 8
    ifelsestatement    go to state 9
    ifclause           go to state 10
    identifier         go to state 11
    whilestatement     go to state 12
    expression         go to state 13
    declaration        go to state 14
    datatype           go to state 15


State 98

    9 functionstatement: datatype identifier RPAREN funcdec LPAREN LBRACE start • returnstatement RBRACE

    RETURN  shift, and go to state 103

    $default  reduce using rule 10 (returnstatement)

    returnstatement  go to state 104


State 99

   16 nextdec: COMMA declist •

    $default  reduce using rule 16 (nextdec)


State 100

   29 whilestatement: WHILE $@4 LPAREN compexp RPAREN LBRACE start RBRACE •

    $default  reduce using rule 29 (whilestatement)


State 101

   19 ifclause: IF $@1 LPAREN compexp RPAREN LBRACE start RBRACE •

    $default  reduce using rule 19 (ifclause)


State 102

   23 elseifclause: ELSEIF $@2 LPAREN compexp RPAREN LBRACE start • RBRACE

    RBRACE  shift, and go to state 105


State 103

   11 returnstatement: RETURN • identifier

    ID  shift, and go to state 1

    identifier  go to state 106


State 104

    9 functionstatement: datatype identifier RPAREN funcdec LPAREN LBRACE start returnstatement • RBRACE

    RBRACE  shift, and go to state 107


State 105

   23 elseifclause: ELSEIF $@2 LPAREN compexp RPAREN LBRACE start RBRACE •

    $default  reduce using rule 23 (elseifclause)


State 106

   11 returnstatement: RETURN identifier •

    $default  reduce using rule 11 (returnstatement)


State 107

    9 functionstatement: datatype identifier RPAREN funcdec LPAREN LBRACE start returnstatement RBRACE •

    $default  reduce using rule 9 (functionstatement)
